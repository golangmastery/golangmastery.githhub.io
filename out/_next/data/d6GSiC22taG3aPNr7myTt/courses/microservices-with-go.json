{"pageProps":{"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    h1: \"h1\",\n    h2: \"h2\",\n    li: \"li\",\n    p: \"p\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"microservices-with-go\",\n      children: \"Microservices with Go\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This course will teach you how to build robust, scalable microservices using Go. You'll learn the principles of microservice architecture and how to implement them effectively using Go's lightweight concurrency model.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"what-youll-learn\",\n      children: \"What You'll Learn\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Throughout this course, you'll learn:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Microservice architecture patterns and best practices\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Service discovery and registration\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"API gateway implementation\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Event-driven architecture\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Message queues and asynchronous communication\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Circuit breaking and resilience patterns\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Containerization and orchestration\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Monitoring and observability\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Testing microservices\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"why-this-matters\",\n      children: \"Why This Matters\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Microservices architecture has become the standard for building large-scale, distributed systems. Go's simplicity, performance, and concurrency features make it an excellent choice for building microservices.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"hands-on-labs\",\n      children: \"Hands-on Labs\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Each module includes practical labs where you'll implement what you've learned. By the end of the course, you'll have built a complete microservices ecosystem that demonstrates real-world patterns and techniques.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"frontMatter":{"title":"Microservices with Go","description":"Build scalable, resilient microservices using Go","labs":[{"slug":"basic-service-lab","description":"Create your first Go microservice"},{"slug":"api-gateway-lab","description":"Implement an API Gateway pattern"},{"slug":"event-driven-lab","description":"Build an event-driven microservice"}]},"courseSlug":"microservices-with-go","modules":[],"currentModule":{"slug":"microservices-with-go","title":"Microservices with Go"}},"__N_SSG":true}