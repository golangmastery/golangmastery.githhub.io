{"pageProps":{"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    h1: \"h1\",\n    h2: \"h2\",\n    li: \"li\",\n    p: \"p\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"testing-in-go\",\n      children: \"Testing in Go\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This comprehensive course covers all aspects of testing Go applications. From basic unit tests to complex integration and end-to-end testing, you'll learn how to ensure your Go code is reliable, maintainable, and performant.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"what-youll-learn\",\n      children: \"What You'll Learn\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Throughout this course, you'll master:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Go's built-in testing framework\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Table-driven testing approaches\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Mocking and dependency injection\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Integration testing strategies\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Performance benchmarking\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Test coverage analysis\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Behavior-driven development\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Continuous integration best practices\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Test organization and maintainability\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"why-this-matters\",\n      children: \"Why This Matters\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Testing is a critical skill for professional Go developers. Well-tested code leads to more reliable applications, easier maintenance, and more confident deployments. The techniques in this course will help you build robust testing practices into your development workflow.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"hands-on-labs\",\n      children: \"Hands-on Labs\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This course includes practical labs where you'll apply testing techniques to real-world scenarios. You'll build comprehensive test suites for various types of Go applications and learn to automate your testing process effectively.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"frontMatter":{"title":"Testing in Go","description":"Master testing techniques and tools for Go applications","labs":[{"slug":"unit-testing-lab","description":"Write effective unit tests in Go"},{"slug":"integration-testing-lab","description":"Build integration tests for Go services"},{"slug":"benchmark-lab","description":"Create performance benchmarks for your code"}]},"courseSlug":"testing-in-go","modules":[],"currentModule":{"slug":"testing-in-go","title":"Testing in Go"}},"__N_SSG":true}